- ajeetdsouza/zoxide
- junegunn/fzf
- sharkdp/hyperfine
- starship/starship
- go-task/task
- sharkdp/fd
- knqyf263/pet
- eza-community/eza
- sharkdp/bat
- traefik/traefik
- casey/just
- charmbracelet/glow
- lsd-rs/lsd
- sharkdp/diskus
- muesli/duf
- AlDanial/cloc
- FiloSottile/age
- chmln/sd
- rs/curlie

- name: mikefarah/yq
  extensions: "{{ .EXTENSION }}"

- name: sorenisanerd/gotty
  skip:
    reason: "gotty is not available on windows"
    condition: '{{ eq .OS "windows" }}'

- name: kraanzu/dooit
  exe:
    patterns:
      - "^{{ .OS }}-{{ .Exe }}"

- name: homeport/dyff
  fallbacks:
    - go

- name: moncho/dry
  exe:
    name: dry
    patterns: ^dry
  extensions: ""

- name: so-fancy/diff-so-fancy
  exe:
    name: diff-so-fancy
    patterns: ^diff-so-fancy$
  extensions: ""

- name: logdyhq/logdy-core
  exe:
    name: logdy
    patterns: ^logdy
  fallbacks:
    - go

- name: cespare/reflex
  skip:
    - reason: "reflex does not work on Windows"
      condition: '{{ eq .OS "windows" }}'
  fallbacks:
    - go

- name: trntv/sshed
  exe:
    name: sshed
    patterns:
      - sshed
      - ^cmd$
  fallbacks:
    - go
  hints:
    - pattern: "{{ .OS }}"
      must: true
  source:
    type: github

- name: pemistahl/grex
  skip:
    - reason: "grex is not available for ARM architecture"
      condition: '{{ eq .ARCH "arm" }}'
  fallbacks:
    - rust

- name: nivekuil/rip
  version: 0.11.4
  fallbacks:
    - rust
  skip:
    - reason: "rip is only available for Linux"
      condition: '{{ne .OS "linux"}}'
    - reason: "rip is only available for arm32 and amd64 architectures"
      condition: |-
        {{- and
            (ne .ARCH "arm32")
            (ne .ARCH "amd64")
        -}}

- name: mgunyho/tere
  skip:
    - reason: "tere is not available for ARM architecture"
      condition: '{{ eq .ARCH "arm" }}'
  extensions: .zip
  fallbacks:
    - rust

- name: cli/cli
  exe:
    name: gh
    patterns:
      - bin/gh{{ .EXTENSION }}$
  post:
    - "{{ .Output }}/{{ .Exe }} extension install github/gh-copilot"
    - "{{ .Output }}/{{ .Exe }} extension upgrade gh-copilot"
    - echo 'eval "$(gh copilot alias -- bash)"' >> ~/.bashrc

- name: jesseduffield/lazydocker
  aliases: lazy
  tags:
    - docker
- name: ahmetb/kubectx
  aliases: kbx
  tags:
    - docker

- name: ahmetb/kubectx
  exe: kubens
  aliases: kbn
  tags:
    - docker

- name: derailed/k9s
  tags:
    - docker

- name: direnv/direnv
  extensions: []

- name: antonmedv/walk
  source:
    type: github
  fallbacks:
    - go

- name: TomWright/dasel
  fallbacks:
    - go
  extensions: ""
  source:
    type: |-
      {{- if has .OS (list "linux" "darwin") -}}
          github
      {{- else -}}
          go
      {{- end -}}
    go:
      command: v2/cmd/dasel

- name: kdash-rs/kdash
  tags:
    - docker

- name: zyedidia/micro
  hints:
    - pattern: static
      weight: 1

- name: jqlang/jq
  hints:
    - pattern: amd64
      weight: |-
        {{- if eq .ARCH "amd64" -}}
        1
        {{- else -}}
        0
        {{- end -}}

    - pattern: armhf
      weight: |-
        {{- if eq .ARCH "arm" -}}
        1
        {{- else -}}
        0
        {{- end -}}

- name: BurntSushi/ripgrep
  exe: rg
  skip:
    - reason: "ripgrep is only available for Linux"
      condition: '{{ ne .OS "linux" }}'

- name: jesseduffield/lazygit
  aliases: lazyg

- name: Byron/dua-cli
  exe: dua
  skip:
    reason: "dua-cli is for the Darwin platform only supporting amd64"
    condition: '{{ and (eq .OS "darwin") (ne .ARCH "amd64") }}'

- name: jarun/nnn
  exe:
    patterns: ^nnn.*
  skip:
    - reason: "nnn is only available for linux"
      condition: '{{ ne .OS "linux" }}'
    - reason: "nnn is only available for amd64 architecture"
      condition: '{{ ne .ARCH "amd64" }}'
  hints:
    - pattern: icons
      weight: 2

- name: helm
  version: 3.16.1
  path: https://get.helm.sh/helm-v{{ .Version }}-{{ .OS }}-{{ .ARCH }}.tar.gz
  source:
    type: url
  tags:
    - docker

- name: kubectl
  version: 1.31.0
  path: https://dl.k8s.io/v{{ .Version }}/bin/{{ .OS }}/{{ .ARCH }}/kubectl{{ .EXTENSION }}
  aliases: kc
  source:
    type: url
  tags:
    - docker

- name: terraform
  version: 1.9.5
  path: https://releases.hashicorp.com/terraform/{{ .Version }}/terraform_{{ .Version }}_{{ .OS }}_{{ .ARCH }}.zip
  aliases: tf
  source:
    type: url

- name: nvbn/thefuck
  exe: thefuck
  version: 3.32
  source:
    type: command
    commands:
      - |
        {{ if eq .OS "linux" }}
        pip install {{ .Exe }}=={{ .Version }} --user --break-system-packages
        {{ else }}
        echo "installation skipped"
        {{ end }}
  tags:
    - python
    - linux
    - native

- name: facebook/PathPicker
  version: 3.32
  source:
    type: command
    commands:
      - |
        {{ if eq .OS "linux" }}
        cd {{ .Output }}
        rm -rf PathPicker
        git clone https://github.com/facebook/PathPicker.git
        cd PathPicker/
        ln -sf "$(pwd)/fpp" {{ .Output }}/fpp
        {{ else }}
        echo "installation skipped"
        {{ end }}
  tags:
    - linux
    - native

- name: sebglazebrook/aliases
  version: 0.8.1
  source:
    type: command
    commands:
      - |
        TMP_DIR=$(mktemp -d)
        echo curl -L -o ${TMP_DIR}/aliases_{{ .Version }}.deb https://github.com/sebglazebrook/aliases/raw/refs/heads/master/releases/{{ .Version }}/debian/aliases_{{ .Version }}.deb
        curl -L -o ${TMP_DIR}/aliases_{{ .Version }}.deb https://github.com/sebglazebrook/aliases/raw/refs/heads/master/releases/{{ .Version }}/debian/aliases_{{ .Version }}.deb
        apt-get install -y ${TMP_DIR}/aliases_{{ .Version }}.deb
        rm -rf ${TMP_DIR}
        aliases init --global >> ~/.bashrc
  tags:
    - elevated
    - linux
    - native

- name: shannonmoeller/up
  source:
    type: command
    commands:
      - |
        curl --create-dirs -o ~/.config/up/up.sh https://raw.githubusercontent.com/shannonmoeller/up/master/up.sh
        echo 'source ~/.config/up/up.sh' >> ~/.bashrc
      - |
        fish -c '
        curl --create-dirs -o ~/.config/up/up.fish https://raw.githubusercontent.com/shannonmoeller/up/master/up.fish
        source ~/.config/up/up.fish
        '
  tags:
    - linux
    - native

- name: nschloe/stressberry
  exe: stress
  version: v0.3.3
  source:
    type: command
    commands:
      - |
        {{ if eq .OS "linux" }}
        apt-get update
        apt-get install -y {{ .Exe }}
        {{ else }}
        echo "installation skipped"
        {{ end }}
  tags:
    - elevated
    - linux
    - native

- name: bcicen/ctop
  extensions: []

- name: 89luca89/distrobox
  exe: distrobox
  version: 1.7.2.1
  source:
    type: command
    commands:
      - |
        {{ if eq .OS "linux" }}
        apt-get update
        apt-get install -y {{ .Exe }}
        {{ else }}
        echo "installation skipped"
        {{ end }}
  tags:
    - elevated
    - linux
    - native

- name: dominikwilkowski/cfonts
  exe: cfonts
  source:
    type: command
    commands:
      - |
        TMPDIR=$(mktemp -d)
        export RUSTUP_HOME=${TMPDIR}/home
        export CARGO_HOME=${TMPDIR}/cargo
        curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y
        dir=$(dirname {{ .Output }})
        ${TMPDIR}/cargo/bin/cargo install {{ .Exe }} --root ${dir}
        rm -rf ${TMPDIR}
  tags:
    - rust
    - native

- name: yank
  description: mptre/yank
  version: 1.3.0-1
  exe: yank-cli
  source:
    type: command
    commands:
      - |
        {{ if eq .OS "linux" }}
        apt-get update
        apt-get install -y {{ .Name }}={{ .Version }}
        {{ else }}
        echo "installation skipped"
        {{ end }}
  tags:
    - elevated
    - linux
    - native
